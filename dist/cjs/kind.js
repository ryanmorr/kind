/*! @ryanmorr/kind v0.1.0 | https://github.com/ryanmorr/kind */
"use strict";const t=new Map,r=new Map,e=new Map;function o(t){return r=>function(t){return{}.toString.call(t).slice(8,-1).toLowerCase()}(r)==t}function n(t,r){return r.some((r=>I(t,r)))}function s(r){const e=Symbol();return t.set(e,r),e}function N(t,r,e){const o=e.get(r);return!!o&&o(t)}function p(t,r){for(const[e,o]of r)if(o(t))return e;return null}function I(o,s){return void 0!==s?Array.isArray(s)?n(o,s):N(o,s,r)||N(o,s,t)||N(o,s,e):p(o,r)||p(o,t)||g}const i=s((t=>null===t)),u=s((t=>void 0===t)),c=s(o("string")),x=s(o("boolean")),D=s(Number.isNaN),K=s(o("number")),_=s(o("symbol")),a=s((function(t){if(!t||"object"!=typeof t)return!1;const r=Object.getPrototypeOf(t);return null===r||r===Object.getPrototypeOf({})})),f=s(o("object")),A=s(Array.isArray),l=s((t=>"function"==typeof t)),E=s(o("set")),y=s(o("weakset")),O=s(o("map")),b=s(o("weakmap")),m=s((t=>Symbol.iterator in Object(t))),R=s(o("regexp")),S=s(o("date")),L=s(o("error")),T=s(o("promise")),M=s((t=>t===globalThis)),g=Symbol();exports.KIND_ARRAY=A,exports.KIND_BOOLEAN=x,exports.KIND_DATE=S,exports.KIND_ERROR=L,exports.KIND_FUNCTION=l,exports.KIND_GLOBAL=M,exports.KIND_ITERABLE=m,exports.KIND_MAP=O,exports.KIND_NAN=D,exports.KIND_NULL=i,exports.KIND_NUMBER=K,exports.KIND_OBJECT=f,exports.KIND_PLAIN_OBJECT=a,exports.KIND_PROMISE=T,exports.KIND_REGEXP=R,exports.KIND_SET=E,exports.KIND_STRING=c,exports.KIND_SYMBOL=_,exports.KIND_UNDEFINED=u,exports.KIND_UNKNOWN=g,exports.KIND_WEAK_MAP=b,exports.KIND_WEAK_SET=y,exports.def=function(t){const o=Symbol();var s;return Array.isArray(t)?e.set(o,(s=t,t=>n(t,s))):r.set(o,t),o},exports.kind=I;
